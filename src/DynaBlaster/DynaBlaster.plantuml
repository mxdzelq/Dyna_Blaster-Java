@startuml

title __DYNABLASTER's Class Diagram__\n

  namespace DynaBlaster {
    class DynaBlaster.Display {
        - canvas : Canvas
        - frame : JFrame
        - height : int
        - title : String
        - width : int
        + Display()
        + getCanvas()
        + getFrame()
        - createDisplay()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.Game {
        + height : int
        {static} + paused : boolean
        + title : String
        + width : int
        - bs : BufferStrategy
        - g : Graphics
        - running : boolean
        - thread : Thread
        + Game()
        + getHeight()
        + getKeyManager()
        + getMouseManager()
        + getThread()
        + getWidth()
        + init()
        + run()
        + setHeight()
        + setWidth()
        + start()
        + stop()
        - render()
        - update()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.GameState {
        + GameState()
        + render()
        + update()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.Handler {
        + Handler()
        + getGame()
        + getHeight()
        + getKeyManager()
        + getMap()
        + getMouseManager()
        + getWidth()
        + setGame()
        + setMap()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.KeyManager {
        + bombPlace : boolean
        + down : boolean
        + left : boolean
        + pause : boolean
        + right : boolean
        + unpause : boolean
        + up : boolean
        - keys : boolean[]
        + KeyManager()
        + keyPressed()
        + keyReleased()
        + keyTyped()
        + update()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.Launcher {
        {static} + main()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.Map {
        - height : int
        - id : int
        - level : String
        - spawnX : int
        - spawnY : int
        - tiles : int[][]
        - width : int
        + Map()
        + getEntityManager()
        + getId()
        + getTile()
        + loadEntities()
        + loadMap()
        + render()
        + setId()
        + update()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.MenuState {
        + MenuState()
        + render()
        + update()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.MouseManager {
        - leftPressed : boolean
        - mouseX : int
        - mouseY : int
        - rightPressed : boolean
        + getMouseX()
        + getMouseY()
        + isLeftPressed()
        + isRightPressed()
        + mouseClicked()
        + mouseDragged()
        + mouseEntered()
        + mouseExited()
        + mouseMoved()
        + mouseOver()
        + mousePressed()
        + mouseReleased()
        + unpress()
    }
  }
  

  namespace DynaBlaster {
    abstract class DynaBlaster.State {
        {static} - currentState : State
        + State()
        {static} + getState()
        {abstract} + render()
        {static} + setState()
        {abstract} + update()
    }
  }
  

  namespace DynaBlaster {
    class DynaBlaster.config {
        {static} + defaultPlayerSpeed : float
        {static} + fireXheight : int
        {static} + fireXwidth : int
        {static} + fireYheight : int
        {static} + fireYwidth : int
        {static} + fps : int
        {static} + frameTitle : String
        {static} + gameTime : int
        {static} + gameWindowHeight : int
        {static} + gameWindowWidth : int
        {static} + level0 : String
        {static} + level1 : String
        {static} + level2 : String
        {static} + level3 : String
        {static} + levelHeight : int
        {static} + levelWidth : int
        {static} + playerSpawnX : int
        {static} + playerSpawnY : int
        {static} + pointsForEnemy : int
        {static} + pointsForLife : int
        {static} + pointsForPassingLevel : int
        {static} + rulesText : String
        {static} + tileHeight : int
        {static} + tileWidth : int
        {static} + timeToBoom : int
        {static} + xmlConfig : String
        {static} + xmlLevels : String
        {static} + parseConfig()
        {static} + parseLevels()
        - config()
    }
  }
  

  DynaBlaster.Game .up.|> java.lang.Runnable
  DynaBlaster.Game o-- DynaBlaster.State : gameState
  DynaBlaster.Game o-- DynaBlaster.State : menuState
  DynaBlaster.Game o-- DynaBlaster.Display : display
  DynaBlaster.Game o-- DynaBlaster.Handler : handler
  DynaBlaster.Game o-- DynaBlaster.KeyManager : keyManager
  DynaBlaster.Game o-- DynaBlaster.MouseManager : mouseManager
  DynaBlaster.GameState -up-|> DynaBlaster.State
  DynaBlaster.GameState o-- DynaBlaster.Map : map
  DynaBlaster.Handler o-- DynaBlaster.Game : game
  DynaBlaster.Handler o-- DynaBlaster.Map : map
  DynaBlaster.KeyManager .up.|> java.awt.event.KeyListener
  DynaBlaster.KeyManager o-- DynaBlaster.Game : game
  DynaBlaster.KeyManager o-- DynaBlaster.Handler : handler
  DynaBlaster.Map o-- entities.EntityManager : entityManager
  DynaBlaster.Map o-- DynaBlaster.Handler : handler
  DynaBlaster.Map o-- SpecialEntities.SpecialEntityManager : specialEntityManager
  DynaBlaster.MenuState -up-|> DynaBlaster.State
  DynaBlaster.MouseManager .up.|> java.awt.event.MouseListener
  DynaBlaster.MouseManager .up.|> java.awt.event.MouseMotionListener
  DynaBlaster.State o-- DynaBlaster.Handler : handler


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
